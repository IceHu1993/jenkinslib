#!groovy

@Library('jenkinslibrary@master') _

//func from shareibrary
def build = new org.devops.build()
def deploy = new org.devops.deploy()

//env
String buildType = "${env.buildType}"
String buildShell = "${env.buildShell}"
String deployHosts = "${env.deployHosts}"
String srcUrl = "${env.srcUrl}"
String branchName = "${env.branchName}"
//String artifactUrl = "${env.artifactUrl}"


//pipeline
pipeline{
    agent { node { label "master"}}    
    stages{

        stage("CheckOut"){
            steps{
                
                script{   
                    checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'cce73a32-834a-44c2-806d-b3979f1f28dd', url: "${srcUrl}"]]])
                    /*
                    tools.PrintMes("获取代码","green")
                    checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], 
                                      doGenerateSubmoduleConfigurations: false, 
                                      extensions: [], 
                                      submoduleCfg: [], 
                                      userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: "${srcUrl}"]]])
                    */
                }
            }
        }
        stage("Build"){
            steps{
                script{
                
                    tools.PrintMes("执行打包","green")
                    //build.Build(buildType,buildShell)
                    artifactory.main(buildType,buildShell)
                    artifactory.PushArtifact()
                    
                   
                }
            }
        }
     }        
}
